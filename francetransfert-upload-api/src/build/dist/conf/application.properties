#spring.profiles.active=dev
spring.profiles.active=prod
# ------------------------------------------------------------------------------------------------
# LOGGING configuration - WARN default is in classpath:logback.xml
# ------------------------------------------------------------------------------------------------
logging.config=${filter.logger.configuration.path}
# ------------------------------------------------------------------------------------------------
# Web application server configuration
# ----------------- -------------------------------------------------------------------------------
application.version=${filter.application.version}
application.cookies.domain=${filter.application.cookies.domain}
server.port=${filter.server.port}
server.compression.enabled=${filter.server.compression.enabled}
server.compression.mime-types=${filter.server.compression.mime-types}
server.cors.pattern.urls=${filter.server.cors.pattern.urls}
# ------------------------------------------------------------------------------------------------
# Tool configuration
# ------------------------------------------------------------------------------------------------
tool.swagger.enabled=${filter.tool.swagger.enabled}
tool.swagger.api.title=${filter.tool.swagger.api.title} 
tool.swagger.api.description=${filter.tool.swagger.api.description}
tool.swagger.api.version=${filter.tool.swagger.api.version}
tool.swagger.api.terms-of-services-use=${filter.tool.swagger.api.terms-of-services-use}
tool.swagger.api.contact.name=${filter.tool.swagger.api.contact.name}
tool.swagger.api.contact.url=${filter.tool.swagger.api.contact.url}
tool.swagger.api.contact.email=${filter.tool.swagger.api.contact.email}
tool.swagger.api.licence=${filter.tool.swagger.api.licence}
tool.swagger.api.licence.url=${filter.tool.swagger.api.licence.url}

spring.mvc.throw-exception-if-no-handler-found=${filter.spring.mvc.throw-exception-if-no-handler-found}
#spring.resources.add-mappings=false
# ------------------------------------------------------------------------------------------------
# LOGGING configuration
# ------------------------------------------------------------------------------------------------
#logging.config=classpath:logback.xml
#logging.level.org.springframework.web=DEBUG
# ------------------------------------------------------------------------------------------------
# Upload configuration
# ------------------------------------------------------------------------------------------------
spring.servlet.multipart.max-file-size=${filter.spring.servlet.multipart.max-file-size}
spring.servlet.multipart.max-request-size=${filter.spring.servlet.multipart.max-request-size}
# ------------------------------------------------------------------------------------------------
# expired enclosure date configuration
# ------------------------------------------------------------------------------------------------
#number of days to expire
enclosure.expire.days=${filter.enclosure.expire.days}
#bucket name prefix
bucket.prefix=${filter.bucket.prefix}
# limit size of enclosure to upload 20GO
upload.limit=${filter.upload.limit}
# ------------------------------------------------------------------------------------------------
# expiration time parameter
# ------------------------------------------------------------------------------------------------
# 10 minutes: 10*60 =600 s
expire.confirmation.code=${filter.expire.confirmation.code}
# 31 days:
expire.token.sender=${filter.expire.token.sender}

storage.access.key=${filter.storage.access.key}
storage.secret.key=${filter.storage.secret.key}
storage.env=${filter.storage.env}
storage.endpoint=${filter.storage.endpoint}


metaload.host=${filter.metaload.host}
metaload.port=${filter.metaload.port}
metaload.sentinel.active=${filter.sentinel.active}
metaload.sentinel.nodes=${filter.sentinel.nodes}
metaload.sentinel.master.name=${filter.sentinel.master.name}
metaload.poolconfig.maxTotal=${filter.metaload.poolconfig.maxTotal}
metaload.poolconfig.maxIdle=${filter.metaload.poolconfig.maxIdle}
metaload.poolconfig.minIdle=${filter.metaload.poolconfig.minIdle}
metaload.poolconfig.maxWaitMillis=${filter.metaload.poolconfig.maxWaitMillis}
metaload.poolconfig.minEvictableIdleTimeMillis=${filter.metaload.poolconfig.minEvictableIdleTimeMillis}
metaload.poolconfig.timeBetweenEvictionRunsMillis=${filter.metaload.poolconfig.timeBetweenEvictionRunsMillis}
metaload.poolconfig.numTestsPerEvictionRun=${filter.metaload.poolconfig.numTestsPerEvictionRun}
metaload.poolconfig.testOnBorrow=${filter.metaload.poolconfig.testOnBorrow}
metaload.poolconfig.testOnReturn=${filter.metaload.poolconfig.testonReturn}
metaload.poolconfig.testWhileIdle=${filter.metaload.poolconfig.testWhileIdle}
metaload.poolconfig.blockWhenExhausted=${filter.metaload.poolconfig.blockWhenExhausted}

server.tomcat.basedir=${filter.server.tomcat.basedir}
